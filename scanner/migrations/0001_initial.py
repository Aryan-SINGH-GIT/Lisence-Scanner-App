# Generated by Django 5.2.6 on 2025-09-18 17:07

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LicenseType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="License name (e.g., MIT, Apache-2.0)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text="Full name of the license", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of the license"),
                ),
                (
                    "is_osi_approved",
                    models.BooleanField(
                        default=False, help_text="Whether the license is OSI approved"
                    ),
                ),
                (
                    "is_fsf_approved",
                    models.BooleanField(
                        default=False, help_text="Whether the license is FSF approved"
                    ),
                ),
                (
                    "is_copyleft",
                    models.BooleanField(
                        default=False, help_text="Whether the license is copyleft"
                    ),
                ),
                (
                    "allows_commercial_use",
                    models.BooleanField(
                        default=True, help_text="Whether commercial use is allowed"
                    ),
                ),
                (
                    "requires_source_code",
                    models.BooleanField(
                        default=False, help_text="Whether source code must be provided"
                    ),
                ),
                (
                    "spdx_identifier",
                    models.CharField(
                        blank=True, help_text="SPDX license identifier", max_length=50
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "License Type",
                "verbose_name_plural": "License Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Upload",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Upload a zip file or compressed archive containing source code",
                        upload_to="uploads/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["zip", "tar", "gz"]
                            )
                        ],
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(
                        help_text="Original name of the uploaded file", max_length=255
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(
                        help_text="Size of the uploaded file in bytes"
                    ),
                ),
                (
                    "upload_date",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the file was uploaded"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if processing failed",
                        null=True,
                    ),
                ),
                (
                    "total_files_scanned",
                    models.IntegerField(
                        default=0, help_text="Total number of files scanned"
                    ),
                ),
                (
                    "processing_time",
                    models.FloatField(
                        blank=True,
                        help_text="Time taken to process in seconds",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Upload",
                "verbose_name_plural": "Uploads",
                "ordering": ["-upload_date"],
            },
        ),
        migrations.CreateModel(
            name="LicenseReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        help_text="Relative path of the file within the archive",
                        max_length=500,
                    ),
                ),
                (
                    "file_name",
                    models.CharField(help_text="Name of the file", max_length=255),
                ),
                (
                    "file_extension",
                    models.CharField(
                        blank=True, help_text="File extension", max_length=10
                    ),
                ),
                (
                    "detected_license",
                    models.CharField(
                        blank=True,
                        help_text="Detected license type (e.g., MIT, Apache-2.0, GPL-3.0)",
                        max_length=100,
                    ),
                ),
                (
                    "license_confidence",
                    models.FloatField(
                        blank=True,
                        help_text="Confidence score for license detection (0.0 to 1.0)",
                        null=True,
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(help_text="Size of the file in bytes"),
                ),
                (
                    "line_count",
                    models.IntegerField(
                        blank=True, help_text="Number of lines in the file", null=True
                    ),
                ),
                (
                    "detection_method",
                    models.CharField(
                        default="licensecheck",
                        help_text="Method used to detect the license",
                        max_length=50,
                    ),
                ),
                (
                    "scan_date",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the file was scanned"
                    ),
                ),
                (
                    "license_text",
                    models.TextField(
                        blank=True, help_text="Full text of the detected license"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about the license detection",
                    ),
                ),
                (
                    "upload",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="license_reports",
                        to="scanner.upload",
                    ),
                ),
            ],
            options={
                "verbose_name": "License Report",
                "verbose_name_plural": "License Reports",
                "ordering": ["file_path"],
                "unique_together": {("upload", "file_path")},
            },
        ),
    ]
